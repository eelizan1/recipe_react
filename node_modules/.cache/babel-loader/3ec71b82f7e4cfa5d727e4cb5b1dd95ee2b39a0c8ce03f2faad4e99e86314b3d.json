{"ast":null,"code":"var _jsxFileName = \"/Users/eelizan/Documents/GitHub/recipe_react/src/components/Popular.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Splide, SplideSlide } from \"@splidejs/react-splide\";\nimport \"@splidejs/react-splide/css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Popular() {\n  _s();\n  // 3. Hold the data in the component sate\n  //      holds state to the component but component will react to it if the state changes from api\n  //      ex. if data changes from the api, the UI will react to it and reflect the changes\n  const [popular, setPopular] = useState([]);\n\n  // 2. Call the fetch data function\n  //      perform side effects in the components\n  useEffect(() => {\n    getPopular(); // will run as soon as component get's mounted\n  }, []); // [] only run getPopular when component gets mounted (runs only on the first render)\n\n  // 1. Define how we fetch the data\n  const getPopular = async () => {\n    // async so that we can wait for data before rendering out the page\n    const api = await fetch(`https://api.spoonacular.com/recipes/random?apiKey=${process.env.REACT_APP_API_KEY}&number=9`);\n    const data = await api.json(); // process api result into json format\n    setPopular(data.recipes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Popular Picks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Splide, {\n        options: {\n          perPage: 4,\n          arrows: false,\n          pagination: false,\n          drag: \"free\",\n          gap: \"5rem\"\n        },\n        children: popular.map(recipe => {\n          return /*#__PURE__*/_jsxDEV(SplideSlide, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: recipe.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: recipe.image,\n                alt: recipe.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Popular, \"SPyBdi+MjTisJBXcu01E2tULWVc=\");\n_c = Popular;\nconst Wrapper = styled.div`\n  margin: 4rem 0rem;\n`;\n_c2 = Wrapper;\nconst Card = styled.div`\n  min-hieght: 25rem;\n  border-radius: 2rem;\n  overflow: hidden;\n\n  img {\n    border-radius: 2rem;\n  }\n`;\n_c3 = Card;\nexport default Popular;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Popular\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"Card\");","map":{"version":3,"names":["useEffect","useState","styled","Splide","SplideSlide","Popular","popular","setPopular","getPopular","api","fetch","process","env","REACT_APP_API_KEY","data","json","recipes","perPage","arrows","pagination","drag","gap","map","recipe","title","image","Wrapper","div","Card"],"sources":["/Users/eelizan/Documents/GitHub/recipe_react/src/components/Popular.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Splide, SplideSlide } from \"@splidejs/react-splide\";\nimport \"@splidejs/react-splide/css\";\n\nfunction Popular() {\n  // 3. Hold the data in the component sate\n  //      holds state to the component but component will react to it if the state changes from api\n  //      ex. if data changes from the api, the UI will react to it and reflect the changes\n  const [popular, setPopular] = useState([]);\n\n  // 2. Call the fetch data function\n  //      perform side effects in the components\n  useEffect(() => {\n    getPopular(); // will run as soon as component get's mounted\n  }, []); // [] only run getPopular when component gets mounted (runs only on the first render)\n\n  // 1. Define how we fetch the data\n  const getPopular = async () => {\n    // async so that we can wait for data before rendering out the page\n    const api = await fetch(\n      `https://api.spoonacular.com/recipes/random?apiKey=${process.env.REACT_APP_API_KEY}&number=9`\n    );\n    const data = await api.json(); // process api result into json format\n    setPopular(data.recipes);\n  };\n\n  return (\n    <div>\n      {/* go through each recipe object and output the title */}\n      <Wrapper>\n        <h3>Popular Picks</h3>\n\n        <Splide \n        options={{\n            perPage:4,\n            arrows: false, \n            pagination: false, \n            drag: \"free\", \n            gap: \"5rem\",\n        }}>\n          {popular.map((recipe) => {\n            return (\n              <SplideSlide>\n                <Card>\n                  <p>{recipe.title}</p>\n                  <img src={recipe.image} alt={recipe.title} />\n                </Card>\n              </SplideSlide>\n            );\n          })}\n        </Splide>\n      </Wrapper>\n    </div>\n  );\n}\n\nconst Wrapper = styled.div`\n  margin: 4rem 0rem;\n`;\n\nconst Card = styled.div`\n  min-hieght: 25rem;\n  border-radius: 2rem;\n  overflow: hidden;\n\n  img {\n    border-radius: 2rem;\n  }\n`;\n\nexport default Popular;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,EAAEC,WAAW,QAAQ,wBAAwB;AAC5D,OAAO,4BAA4B;AAAC;AAEpC,SAASC,OAAO,GAAG;EAAA;EACjB;EACA;EACA;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA;EACAD,SAAS,CAAC,MAAM;IACdQ,UAAU,EAAE,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,MAAMA,UAAU,GAAG,YAAY;IAC7B;IACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,qDAAoDC,OAAO,CAACC,GAAG,CAACC,iBAAkB,WAAU,CAC9F;IACD,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,EAAE,CAAC,CAAC;IAC/BR,UAAU,CAACO,IAAI,CAACE,OAAO,CAAC;EAC1B,CAAC;EAED,oBACE;IAAA,uBAEE,QAAC,OAAO;MAAA,wBACN;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsB,eAEtB,QAAC,MAAM;QACP,OAAO,EAAE;UACLC,OAAO,EAAC,CAAC;UACTC,MAAM,EAAE,KAAK;UACbC,UAAU,EAAE,KAAK;UACjBC,IAAI,EAAE,MAAM;UACZC,GAAG,EAAE;QACT,CAAE;QAAA,UACCf,OAAO,CAACgB,GAAG,CAAEC,MAAM,IAAK;UACvB,oBACE,QAAC,WAAW;YAAA,uBACV,QAAC,IAAI;cAAA,wBACH;gBAAA,UAAIA,MAAM,CAACC;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAK,eACrB;gBAAK,GAAG,EAAED,MAAM,CAACE,KAAM;gBAAC,GAAG,EAAEF,MAAM,CAACC;cAAM;gBAAA;gBAAA;gBAAA;cAAA,QAAG;YAAA;cAAA;cAAA;cAAA;YAAA;UACxC;YAAA;YAAA;YAAA;UAAA,QACK;QAElB,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACK;IAAA;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACN;AAEV;AAAC,GAlDQnB,OAAO;AAAA,KAAPA,OAAO;AAoDhB,MAAMqB,OAAO,GAAGxB,MAAM,CAACyB,GAAI;AAC3B;AACA,CAAC;AAAC,MAFID,OAAO;AAIb,MAAME,IAAI,GAAG1B,MAAM,CAACyB,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MARIC,IAAI;AAUV,eAAevB,OAAO;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}